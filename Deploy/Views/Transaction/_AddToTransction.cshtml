@model SkuForTransactionMetadata
@{
    Layout = null;
}

<script>
    function CalculateAmount() {
        var quantity = $("#TransactionQuantity").data("kendoNumericTextBox");
        var rate = $("#TransactionRate").data("kendoNumericTextBox");
        var amount = $("#TransactionAmount").data("kendoNumericTextBox");
        amount.value(quantity.value() * rate.value());
    }

    function CalculateRate() {
        var quantity = $("#TransactionQuantity").data("kendoNumericTextBox");
        var rate = $("#TransactionRate").data("kendoNumericTextBox");
        var amount = $("#TransactionAmount").data("kendoNumericTextBox");
        if (quantity.value() > 0 && amount.value() > 0) {
            rate.value(amount.value() / quantity.value());
        }
    }
</script>
@using (Html.BeginForm())
{<div class="container-fluid">
    <div class="row-fluid">
        <div class="span3">
            @Html.LabelFor(x => x.CompanyName)
        </div>
        <div class="span9">
            @Html.DisplayFor(x => x.CompanyName)
        </div>
    </div>
    <div class="row-fluid">
        <div class="span3">
            @Html.LabelFor(x => x.BrandName)
        </div>
        <div class="span9">
            @Html.DisplayFor(x => x.BrandName)
        </div>
    </div>
    <div class="row-fluid">
        <div class="span3">
            @Html.LabelFor(x => x.ProductName)
        </div>
        <div class="span9">
            @Html.DisplayFor(x => x.ProductName)
        </div>
    </div>
    <div class="row-fluid">
        <div class="span3">
            @Html.LabelFor(x => x.SkuName)
        </div>
        <div class="span9">
            @Html.DisplayFor(x => x.SkuName)
        </div>
    </div>
    <div class="row-fluid">
        <div class="span3">
            @Html.LabelFor(x => x.Quantity)
        </div>
        <div class="span9">
            @Html.DisplayFor(x => x.Quantity)
        </div>
    </div>
    <div class="row-fluid">
        <div class="span3">
            @Html.LabelFor(x => x.Rate)
        </div>
        <div class="span9">
            @Html.DisplayFor(x => x.Rate)
            @Html.HiddenFor(x => x.SkuId)
        </div>
    </div>
    <div class="row-fluid keep-margin-top">
        <div class="span3">
            Quantity :                
        </div>
        <div class="span9">
            @(Html.Kendo().NumericTextBoxFor(x => x.TransactionQuantity)
                  .Max(ViewBag.IsSales ? Model.Quantity : Int32.MaxValue)
                  .Min(0)
                  .Step(1)
                  .HtmlAttributes(new { style = "height: 20px;" })                  
                  .Events(e =>
                      {
                          e.Spin("CalculateAmount");
                          e.Change("CalculateAmount");
                      })
                  .Value(0))
        </div>
    </div>
    <div class="row-fluid keep-margin-top">
        <div class="span3">
            Rate :
        </div>
        <div class="span9">
            @(Html.Kendo().NumericTextBoxFor(x => x.TransactionRate)
                  .Min(0)
                  .HtmlAttributes(new { style = "height: 20px;" })                  
                  .Step(1)
                  .Events(e =>
                      {
                          e.Spin("CalculateAmount");
                          e.Change("CalculateAmount");
                      })
                  .Value(0))
        </div>
    </div>
    <div class="row-fluid keep-margin-top">
        <div class="span3">
            Amount :                
        </div>
        <div class="span9">
            @(Html.Kendo().NumericTextBoxFor(x => x.TransactionAmount)
                  .Min(0)
                  .HtmlAttributes(new { style = "height: 20px;" })                  
                  .Step(1)
                  .Events(e =>
                      {
                          e.Spin("CalculateRate");
                          e.Change("CalculateRate");
                      })
                  .Value(0))
        </div>
    </div>
     <div class="row-fluid">
         <div class="span9">
            <div id="AddToTransctionErrorMessagess" class="alert-error"></div>             
         </div>
         <div class="span3">
             <input id="AddtoChart" type="submit" class="k-button keep-right button-width keep-margin-top" value="Add" />
         </div>
     </div>
    </div>
}


<script type="text/javascript">
    $('form').submit(function (e) {
        e.preventDefault();
        var fromData = $(this);
        var $errorMessagesContenar = $("#AddToTransctionErrorMessagess");
        $errorMessagesContenar.empty();
        ShowWaiting();
        $.ajax({
            url: fromData.attr('action'),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: JSON.stringify($('form').serializeJSON()),
            success: function (result) {
                if (result.IsError) {
                    $.each(result.ErrorMessages, function () {
                        $("<span class='alert-error'>" + this.ErrorMessage + "</span><br/>").appendTo($errorMessagesContenar);
                    });
                } else {
                    $(".ui-dialog-titlebar-close").click();
                }
                HideWaiting();
                return;
            }
        });
    })
</script>


